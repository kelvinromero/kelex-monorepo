version: "3.8"

services:
  admin:
    container_name: kelex-admin
    build: ./admin
    tty: true
    command: bash -c "./bin/dev"
    networks:
      - clickhouse-setup_default
    environment:
      - OTEL_EXPORTER=otlp
      - OTEL_SERVICE_NAME=kelex-admin
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4318
      - OTEL_RESOURCE_ATTRIBUTES='host.name=kelex-web-admin,os.type=linux,service.name=kelex-web-admin'
    volumes:
      - ./admin:/app
    ports:
      - "3000:3000"
    depends_on:
      - db
      - rabbitmq

  bff:
    container_name: kelex-bff
    build:
      context: ./web-player-bff
      dockerfile: Dockerfile
    networks:
      - clickhouse-setup_default
    environment:
      - OTEL_EXPORTER=otlp
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=kelex-bff
      - OTEL_INSTRUMENTATION_COMMON_PEER_SERVICE_MAPPING='{"cortex/transcript":"kelex-transcript-service","redis":"kelex-redis","es":"kelex-elasticsearch"}'
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES='host.name=kelex-bff,os.type=linux,service.name=kelex-bff'
    ports:
      - "8087:8080"
    depends_on:
      - es
      - cortex

  cortex:
    container_name: kelex-cortex
    build:
      context: ./cortex
      dockerfile: Dockerfile
    command: ["uvicorn", "app.main:app", "--reload",  "--host", "0.0.0.0", "--port", "80"]
    networks:
      - clickhouse-setup_default
    environment:
      - OTEL_SERVICE_NAME=kelex-cortex
      - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES='host.name=kelex-cortex,os.type=linux,service.name=kelex-cortex'
    volumes:
      - ./cortex:/src
    ports:
      - "5000:80"

  db:
    container_name: kelex-admin-db
    image: postgres
    volumes:
      - ./admin/tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - clickhouse-setup_default

  episodes-consumer:
    container_name: kelex-episode-consumer
    build:
      context: ./consumers
      dockerfile: Dockerfile
    networks:
      - clickhouse-setup_default
    environment:
      - OTEL_EXPORTER=otlp
      - OTEL_SERVICE_NAME=kelex-consumers
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES='host.name=kelex-episodes-consumer,os.type=linux,service.name=kelex-episodes-consumer'
      - SPRING_PROFILES_ACTIVE=episodes,receiver
    depends_on:
      - es
      - rabbitmq

  podcasts-consumer:
    container_name: kelex-podcast-consumer
    build:
      context: ./consumers
      dockerfile: Dockerfile
    networks:
      - clickhouse-setup_default
    environment:
      - OTEL_EXPORTER=otlp
      - OTEL_SERVICE_NAME=kelex-consumers
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES='host.name=kelex-podcasts-consumer,os.type=linux,service.name=kelex-podcasts-consumer'
      - SPRING_PROFILES_ACTIVE=podcasts,receiver
    depends_on:
      - es
      - rabbitmq

  rabbitmq:
    container_name: kelex-rabbitmq
    image: rabbitmq:3.12-management-alpine
    networks:
      - clickhouse-setup_default
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  locust:
    container_name: kelex-locust
    image: locustio/locust
    networks:
      - clickhouse-setup_default
    ports:
      - "8089:8089"
    volumes:
      - ./locust:/mnt/locust
    # command: -f /mnt/locust/locustfile.py --host=http://web:3000
    command: -f /mnt/locust/locustfile.py --host=http://localhost:8080

  es:
    container_name: kelex-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.2
    networks:
      - clickhouse-setup_default
    volumes:
      - ./.esdata:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kelex-kibana
    image: docker.elastic.co/kibana/kibana:8.7.1
    networks:
      - clickhouse-setup_default
    environment:
      - ELASTICSEARCH_HOSTS=http://es:9200
    ports:
      - 5601:5601
    depends_on:
      - es

  redis:
    container_name: kelex-redis
    image: redis
    networks:
      - clickhouse-setup_default
    ports:
      - "6379:6379"

networks:
  clickhouse-setup_default:
    external: true